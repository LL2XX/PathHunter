import requests
from bs4 import BeautifulSoup
import re
import os
from urllib.parse import urljoin, urlparse
import urllib3
import random
import json

# 禁用SSL警告
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

# 定义路径模式 - 合并为一个正则表达式字符串
path_pattern = re.compile(r"""
    (?:["'])
    (
        # 匹配绝对路径
        (
        (?:[a-zA-Z]{1,10}://|//)       # Match a scheme [a-Z]*1-10 or //
        [^"'/]+\.                   # Match a domainname (any character + dot)
        [a-zA-Z]{2,}[^"']*         # The domainextension and/or path
        )
        |
        # 匹配相对路径./../
        (
        (?:\.\./|\./)                    # Start with /,../,./
        [^"'><,;| *()%$^/\\\[\]]          # Next character can't be...
        [^"'><,;|()]+                   # Rest of the characters can't be
        )
        |
        # 匹配相对路径/
        (
        /               # REST API (no extension) with /
        [a-zA-Z0-9_\-/]{3,}                 # Proper REST endpoints usually have 3+ chars
        (?:[?|#][^"|']*|)              # ? or # mark with parameters
        )
        |
        # 匹配文件
        (
        [a-zA-Z0-9_\-/]+                 # filename
        \.(?:php|asp|aspx|jsp|json|
             action|html|js|txt|xml)        # . + extension
        (?:[?|#][^"|']*|)              # ? or # mark with parameters
        )
    )
    (?:["'])
    """, re.IGNORECASE | re.VERBOSE)

# 定义敏感字段匹配的正则表达式
sensitive_pattern = re.compile(r"""
    (?:
        (["']?zopim[_-]?account[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?zhuliang[_-]?gh[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?zensonatypepassword["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?zendesk[_-]?travis[_-]?github["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?yt[_-]?server[_-]?api[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?yt[_-]?partner[_-]?refresh[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?yt[_-]?partner[_-]?client[_-]?secret["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?yt[_-]?client[_-]?secret["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?yt[_-]?api[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?yt[_-]?account[_-]?refresh[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?yt[_-]?account[_-]?client[_-]?secret["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?yangshun[_-]?gh[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?yangshun[_-]?gh[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?www[_-]?googleapis[_-]?com["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?wpt[_-]?ssh[_-]?private[_-]?key[_-]?base64["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?wpt[_-]?ssh[_-]?connect["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?wpt[_-]?report[_-]?api[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?wpt[_-]?prepare[_-]?dir["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?wpt[_-]?db[_-]?user["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?wpt[_-]?db[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?wporg[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?wpjm[_-]?phpunit[_-]?google[_-]?geocode[_-]?api[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?wordpress[_-]?db[_-]?user["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?wordpress[_-]?db[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?wincert[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?widget[_-]?test[_-]?server["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?widget[_-]?fb[_-]?password[_-]?3["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?widget[_-]?fb[_-]?password[_-]?2["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?widget[_-]?fb[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?widget[_-]?basic[_-]?password[_-]?5["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?widget[_-]?basic[_-]?password[_-]?4["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?widget[_-]?basic[_-]?password[_-]?3["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?widget[_-]?basic[_-]?password[_-]?2["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?widget[_-]?basic[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?watson[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?watson[_-]?device[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?watson[_-]?conversation[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?wakatime[_-]?api[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?vscetoken["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?visual[_-]?recognition[_-]?api[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?virustotal[_-]?apikey["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?vip[_-]?github[_-]?deploy[_-]?key[_-]?pass["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?vip[_-]?github[_-]?deploy[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?vip[_-]?github[_-]?build[_-]?repo[_-]?deploy[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?v[_-]?sfdc[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?v[_-]?sfdc[_-]?client[_-]?secret["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?usertravis["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?user[_-]?assets[_-]?secret[_-]?access[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?user[_-]?assets[_-]?access[_-]?key[_-]?id["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?use[_-]?ssh["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?us[_-]?east[_-]?1[_-]?elb[_-]?amazonaws[_-]?com["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?urban[_-]?secret["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?urban[_-]?master[_-]?secret["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?urban[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?unity[_-]?serial["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?unity[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?twitteroauthaccesstoken["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?twitteroauthaccesssecret["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?twitter[_-]?consumer[_-]?secret["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?twitter[_-]?consumer[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?twine[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?twilio[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?twilio[_-]?sid["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?twilio[_-]?configuration[_-]?sid["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?twilio[_-]?chat[_-]?account[_-]?api[_-]?service["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?twilio[_-]?api[_-]?secret["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?twilio[_-]?api[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?trex[_-]?okta[_-]?client[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?trex[_-]?client[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?travis[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?travis[_-]?secure[_-]?env[_-]?vars["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?travis[_-]?pull[_-]?request["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?travis[_-]?gh[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?travis[_-]?e2e[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?travis[_-]?com[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?travis[_-]?branch["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?travis[_-]?api[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?travis[_-]?access[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?token[_-]?core[_-]?java["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?thera[_-]?oss[_-]?access[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?tester[_-]?keys[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?test[_-]?test["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?test[_-]?github[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?tesco[_-]?api[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?svn[_-]?pass["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?surge[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?surge[_-]?login["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?stripe[_-]?public["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?stripe[_-]?private["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?strip[_-]?secret[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?strip[_-]?publishable[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?stormpath[_-]?api[_-]?key[_-]?secret["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?stormpath[_-]?api[_-]?key[_-]?id["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?starship[_-]?auth[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?starship[_-]?account[_-]?sid["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?star[_-]?test[_-]?secret[_-]?access[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?star[_-]?test[_-]?location["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?star[_-]?test[_-]?bucket["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?star[_-]?test[_-]?aws[_-]?access[_-]?key[_-]?id["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?staging[_-]?base[_-]?url[_-]?runscope["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?ssmtp[_-]?config["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?sshpass["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?srcclr[_-]?api[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?square[_-]?reader[_-]?sdk[_-]?repository[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?sqssecretkey["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?sqsaccesskey["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?spring[_-]?mail[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?spotify[_-]?api[_-]?client[_-]?secret["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?spotify[_-]?api[_-]?access[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?spaces[_-]?secret[_-]?access[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?spaces[_-]?access[_-]?key[_-]?id["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?soundcloud[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?soundcloud[_-]?client[_-]?secret["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?sonatypepassword["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?sonatype[_-]?token[_-]?user["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?sonatype[_-]?token[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?sonatype[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?sonatype[_-]?pass["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?sonatype[_-]?nexus[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?sonatype[_-]?gpg[_-]?passphrase["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?sonatype[_-]?gpg[_-]?key[_-]?name["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?sonar[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?sonar[_-]?project[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?sonar[_-]?organization[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?socrata[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?socrata[_-]?app[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?snyk[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?snyk[_-]?api[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?snoowrap[_-]?refresh[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?snoowrap[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?snoowrap[_-]?client[_-]?secret["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?slate[_-]?user[_-]?email["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?slash[_-]?developer[_-]?space[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?slash[_-]?developer[_-]?space["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?signing[_-]?key[_-]?sid["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?signing[_-]?key[_-]?secret["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?signing[_-]?key[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?signing[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?setsecretkey["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?setdstsecretkey["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?setdstaccesskey["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?ses[_-]?secret[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?ses[_-]?access[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?service[_-]?account[_-]?secret["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?sentry[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?sentry[_-]?secret["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?sentry[_-]?endpoint["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?sentry[_-]?default[_-]?org["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?sentry[_-]?auth[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?sendwithus[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?sendgrid[_-]?username["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?sendgrid[_-]?user["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?sendgrid[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?sendgrid[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?sendgrid[_-]?api[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?sendgrid["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?selion[_-]?selenium[_-]?host["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?selion[_-]?log[_-]?level[_-]?dev["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?segment[_-]?api[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?secretid["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?secretkey["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?secretaccesskey["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?secret[_-]?key[_-]?base["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?secret[_-]?9["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?secret[_-]?8["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?secret[_-]?7["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?secret[_-]?6["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?secret[_-]?5["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?secret[_-]?4["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?secret[_-]?3["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?secret[_-]?2["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?secret[_-]?11["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?secret[_-]?10["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?secret[_-]?1["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?secret[_-]?0["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?sdr[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?scrutinizer[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?sauce[_-]?access[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?sandbox[_-]?aws[_-]?secret[_-]?access[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?sandbox[_-]?aws[_-]?access[_-]?key[_-]?id["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?sandbox[_-]?access[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?salesforce[_-]?bulk[_-]?test[_-]?security[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?salesforce[_-]?bulk[_-]?test[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?sacloud[_-]?api["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?sacloud[_-]?access[_-]?token[_-]?secret["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?sacloud[_-]?access[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?s3[_-]?user[_-]?secret["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?s3[_-]?secret[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?s3[_-]?secret[_-]?assets["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?s3[_-]?secret[_-]?app[_-]?logs["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?s3[_-]?key[_-]?assets["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?s3[_-]?key[_-]?app[_-]?logs["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?s3[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?s3[_-]?external[_-]?3[_-]?amazonaws[_-]?com["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?s3[_-]?bucket[_-]?name[_-]?assets["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?s3[_-]?bucket[_-]?name[_-]?app[_-]?logs["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?s3[_-]?access[_-]?key[_-]?id["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?s3[_-]?access[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?rubygems[_-]?auth[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?rtd[_-]?store[_-]?pass["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?rtd[_-]?key[_-]?pass["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?route53[_-]?access[_-]?key[_-]?id["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?ropsten[_-]?private[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?rinkeby[_-]?private[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?rest[_-]?api[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?repotoken["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?reporting[_-]?webdav[_-]?url["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?reporting[_-]?webdav[_-]?pwd["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?release[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?release[_-]?gh[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?registry[_-]?secure["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?registry[_-]?pass["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?refresh[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?rediscloud[_-]?url["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?redis[_-]?stunnel[_-]?urls["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?randrmusicapiaccesstoken["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?rabbitmq[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?quip[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?qiita[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?pypi[_-]?passowrd["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?pushover[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?publish[_-]?secret["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?publish[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?publish[_-]?access["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?project[_-]?config["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?prod[_-]?secret[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?prod[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?prod[_-]?access[_-]?key[_-]?id["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?private[_-]?signing[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?pring[_-]?mail[_-]?username["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?preferred[_-]?username["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?prebuild[_-]?auth["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?postgresql[_-]?pass["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?postgresql[_-]?db["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?postgres[_-]?env[_-]?postgres[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?postgres[_-]?env[_-]?postgres[_-]?db["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?plugin[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?plotly[_-]?apikey["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?places[_-]?apikey["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?places[_-]?api[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?pg[_-]?host["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?pg[_-]?database["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?personal[_-]?secret["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?personal[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?percy[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?percy[_-]?project["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?paypal[_-]?client[_-]?secret["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?passwordtravis["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?parse[_-]?js[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?pagerduty[_-]?apikey["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?packagecloud[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?ossrh[_-]?username["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?ossrh[_-]?secret["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?ossrh[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?ossrh[_-]?pass["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?ossrh[_-]?jira[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?os[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?os[_-]?auth[_-]?url["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?org[_-]?project[_-]?gradle[_-]?sonatype[_-]?nexus[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?org[_-]?gradle[_-]?project[_-]?sonatype[_-]?nexus[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?openwhisk[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?open[_-]?whisk[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?onesignal[_-]?user[_-]?auth[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?onesignal[_-]?api[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?omise[_-]?skey["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?omise[_-]?pubkey["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?omise[_-]?pkey["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?omise[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?okta[_-]?oauth2[_-]?clientsecret["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?okta[_-]?oauth2[_-]?client[_-]?secret["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?okta[_-]?client[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?ofta[_-]?secret["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?ofta[_-]?region["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?ofta[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?octest[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?octest[_-]?app[_-]?username["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?octest[_-]?app[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?oc[_-]?pass["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?object[_-]?store[_-]?creds["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?object[_-]?store[_-]?bucket["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?object[_-]?storage[_-]?region[_-]?name["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?object[_-]?storage[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?oauth[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?numbers[_-]?service[_-]?pass["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?nuget[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?nuget[_-]?apikey["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?nuget[_-]?api[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?npm[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?npm[_-]?secret[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?npm[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?npm[_-]?email["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?npm[_-]?auth[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?npm[_-]?api[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?npm[_-]?api[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?now[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?non[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?node[_-]?pre[_-]?gyp[_-]?secretaccesskey["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?node[_-]?pre[_-]?gyp[_-]?github[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?node[_-]?pre[_-]?gyp[_-]?accesskeyid["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?node[_-]?env["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?ngrok[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?ngrok[_-]?auth[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?nexuspassword["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?nexus[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?new[_-]?relic[_-]?beta[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?netlify[_-]?api[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?nativeevents["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?mysqlsecret["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?mysqlmasteruser["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?mysql[_-]?username["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?mysql[_-]?user["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?mysql[_-]?root[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?mysql[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?mysql[_-]?hostname["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?mysql[_-]?database["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?my[_-]?secret[_-]?env["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?multi[_-]?workspace[_-]?sid["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?multi[_-]?workflow[_-]?sid["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?multi[_-]?disconnect[_-]?sid["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?multi[_-]?connect[_-]?sid["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?multi[_-]?bob[_-]?sid["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?minio[_-]?secret[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?minio[_-]?access[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?mile[_-]?zero[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?mh[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?mh[_-]?apikey["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?mg[_-]?public[_-]?api[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?mg[_-]?api[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?mapboxaccesstoken["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?mapbox[_-]?aws[_-]?secret[_-]?access[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?mapbox[_-]?aws[_-]?access[_-]?key[_-]?id["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?mapbox[_-]?api[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?mapbox[_-]?access[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?manifest[_-]?app[_-]?url["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?manifest[_-]?app[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?mandrill[_-]?api[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?managementapiaccesstoken["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?management[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?manage[_-]?secret["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?manage[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?mailgun[_-]?secret[_-]?api[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?mailgun[_-]?pub[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?mailgun[_-]?pub[_-]?apikey["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?mailgun[_-]?priv[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?mailgun[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?mailgun[_-]?apikey["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?mailgun[_-]?api[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?mailer[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?mailchimp[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?mailchimp[_-]?api[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?mail[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?magento[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?magento[_-]?auth[_-]?username ["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?magento[_-]?auth[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?lottie[_-]?upload[_-]?cert[_-]?key[_-]?store[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?lottie[_-]?upload[_-]?cert[_-]?key[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?lottie[_-]?s3[_-]?secret[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?lottie[_-]?happo[_-]?secret[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?lottie[_-]?happo[_-]?api[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?looker[_-]?test[_-]?runner[_-]?client[_-]?secret["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?ll[_-]?shared[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?ll[_-]?publish[_-]?url["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?linux[_-]?signing[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?linkedin[_-]?client[_-]?secretor lottie[_-]?s3[_-]?api[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?lighthouse[_-]?api[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?lektor[_-]?deploy[_-]?username["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?lektor[_-]?deploy[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?leanplum[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?kxoltsn3vogdop92m["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?kubeconfig["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?kubecfg[_-]?s3[_-]?path["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?kovan[_-]?private[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?keystore[_-]?pass["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?kafka[_-]?rest[_-]?url["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?kafka[_-]?instance[_-]?name["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?kafka[_-]?admin[_-]?url["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?jwt[_-]?secret["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?jdbc:mysql["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?jdbc[_-]?host["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?jdbc[_-]?databaseurl["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?itest[_-]?gh[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?ios[_-]?docs[_-]?deploy[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?internal[_-]?secrets["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?integration[_-]?test[_-]?appid["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?integration[_-]?test[_-]?api[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?index[_-]?name["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?ij[_-]?repo[_-]?username["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?ij[_-]?repo[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?hub[_-]?dxia2[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?homebrew[_-]?github[_-]?api[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?hockeyapp[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?heroku[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?heroku[_-]?email["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?heroku[_-]?api[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?hb[_-]?codesign[_-]?key[_-]?pass["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?hb[_-]?codesign[_-]?gpg[_-]?pass["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?hab[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?hab[_-]?auth[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?grgit[_-]?user["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?gren[_-]?github[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?gradle[_-]?signing[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?gradle[_-]?signing[_-]?key[_-]?id["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?gradle[_-]?publish[_-]?secret["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?gradle[_-]?publish[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?gpg[_-]?secret[_-]?keys["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?gpg[_-]?private[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?gpg[_-]?passphrase["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?gpg[_-]?ownertrust["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?gpg[_-]?keyname["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?gpg[_-]?key[_-]?name["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?google[_-]?private[_-]?key[_-]?(id)?["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?google[_-]?maps[_-]?api[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?google[_-]?client[_-]?secret["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?google[_-]?client[_-]?id["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?google[_-]?client[_-]?email["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?google[_-]?account[_-]?type["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?gogs[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?gitlab[_-]?user[_-]?email["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?github[_-]?tokens["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?github[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?github[_-]?repo["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?github[_-]?release[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?github[_-]?pwd["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?github[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?github[_-]?oauth[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?github[_-]?oauth["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?github[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?github[_-]?hunter[_-]?username["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?github[_-]?hunter[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?github[_-]?deployment[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?github[_-]?deploy[_-]?hb[_-]?doc[_-]?pass["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?github[_-]?client[_-]?secret["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?github[_-]?auth[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?github[_-]?auth["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?github[_-]?api[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?github[_-]?api[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?github[_-]?access[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?git[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?git[_-]?name["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?git[_-]?email["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?git[_-]?committer[_-]?name["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?git[_-]?committer[_-]?email["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?git[_-]?author[_-]?name["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?git[_-]?author[_-]?email["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?ghost[_-]?api[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?ghb[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?gh[_-]?unstable[_-]?oauth[_-]?client[_-]?secret["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?gh[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?gh[_-]?repo[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?gh[_-]?oauth[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?gh[_-]?oauth[_-]?client[_-]?secret["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?gh[_-]?next[_-]?unstable[_-]?oauth[_-]?client[_-]?secret["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?gh[_-]?next[_-]?unstable[_-]?oauth[_-]?client[_-]?id["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?gh[_-]?next[_-]?oauth[_-]?client[_-]?secret["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?gh[_-]?email["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?gh[_-]?api[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?gcs[_-]?bucket["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?gcr[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?gcloud[_-]?service[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?gcloud[_-]?project["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?gcloud[_-]?bucket["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?ftp[_-]?username["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?ftp[_-]?user["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?ftp[_-]?pw["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?ftp[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?ftp[_-]?login["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?ftp[_-]?host["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?fossa[_-]?api[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?flickr[_-]?api[_-]?secret["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?flickr[_-]?api[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?flask[_-]?secret[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?firefox[_-]?secret["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?firebase[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?firebase[_-]?project[_-]?develop["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?firebase[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?firebase[_-]?api[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?firebase[_-]?api[_-]?json["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?file[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?exp[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?eureka[_-]?awssecretkey["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?env[_-]?sonatype[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?env[_-]?secret[_-]?access[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?env[_-]?secret["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?env[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?env[_-]?heroku[_-]?api[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?env[_-]?github[_-]?oauth[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?end[_-]?user[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?encryption[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?elasticsearch[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?elastic[_-]?cloud[_-]?auth["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?dsonar[_-]?projectkey["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?dsonar[_-]?login["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?droplet[_-]?travis[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?dropbox[_-]?oauth[_-]?bearer["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?doordash[_-]?auth[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?dockerhubpassword["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?dockerhub[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?docker[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?docker[_-]?postgres[_-]?url["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?docker[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?docker[_-]?passwd["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?docker[_-]?pass["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?docker[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?docker[_-]?hub[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?digitalocean[_-]?ssh[_-]?key[_-]?ids["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?digitalocean[_-]?ssh[_-]?key[_-]?body["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?digitalocean[_-]?access[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?dgpg[_-]?passphrase["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?deploy[_-]?user["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?deploy[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?deploy[_-]?secure["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?deploy[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?ddgc[_-]?github[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?ddg[_-]?test[_-]?email[_-]?pw["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?ddg[_-]?test[_-]?email["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?db[_-]?username["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?db[_-]?user["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?db[_-]?pw["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?db[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?db[_-]?host["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?db[_-]?database["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?db[_-]?connection["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?datadog[_-]?app[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?datadog[_-]?api[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?database[_-]?username["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?database[_-]?user["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?database[_-]?port["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?database[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?database[_-]?name["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?database[_-]?host["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?danger[_-]?github[_-]?api[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?cypress[_-]?record[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?coverity[_-]?scan[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?coveralls[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?coveralls[_-]?repo[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?coveralls[_-]?api[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?cos[_-]?secrets["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?conversation[_-]?username["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?conversation[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?contentful[_-]?v2[_-]?access[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?contentful[_-]?test[_-]?org[_-]?cma[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?contentful[_-]?php[_-]?management[_-]?test[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?contentful[_-]?management[_-]?api[_-]?access[_-]?token[_-]?new["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?contentful[_-]?management[_-]?api[_-]?access[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?contentful[_-]?integration[_-]?management[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?contentful[_-]?cma[_-]?test[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?contentful[_-]?access[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?consumerkey["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?consumer[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?conekta[_-]?apikey["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?coding[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?codecov[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?codeclimate[_-]?repo[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?codacy[_-]?project[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?cocoapods[_-]?trunk[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?cocoapods[_-]?trunk[_-]?email["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?cn[_-]?secret[_-]?access[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?cn[_-]?access[_-]?key[_-]?id["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?clu[_-]?ssh[_-]?private[_-]?key[_-]?base64["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?clu[_-]?repo[_-]?url["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?cloudinary[_-]?url[_-]?staging["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?cloudinary[_-]?url["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?cloudflare[_-]?email["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?cloudflare[_-]?auth[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?cloudflare[_-]?auth[_-]?email["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?cloudflare[_-]?api[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?cloudant[_-]?service[_-]?database["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?cloudant[_-]?processed[_-]?database["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?cloudant[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?cloudant[_-]?parsed[_-]?database["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?cloudant[_-]?order[_-]?database["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?cloudant[_-]?instance["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?cloudant[_-]?database["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?cloudant[_-]?audited[_-]?database["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?cloudant[_-]?archived[_-]?database["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?cloud[_-]?api[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?clojars[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?client[_-]?secret["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?cli[_-]?e2e[_-]?cma[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?claimr[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?claimr[_-]?superuser["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?claimr[_-]?db["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?claimr[_-]?database["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?ci[_-]?user[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?ci[_-]?server[_-]?name["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?ci[_-]?registry[_-]?user["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?ci[_-]?project[_-]?url["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?ci[_-]?deploy[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?chrome[_-]?refresh[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?chrome[_-]?client[_-]?secret["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?cheverny[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?cf[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?certificate[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?censys[_-]?secret["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?cattle[_-]?secret[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?cattle[_-]?agent[_-]?instance[_-]?auth["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?cattle[_-]?access[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?cargo[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?cache[_-]?s3[_-]?secret[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?bx[_-]?username["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?bx[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?bundlesize[_-]?github[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?built[_-]?branch[_-]?deploy[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?bucketeer[_-]?aws[_-]?secret[_-]?access[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?bucketeer[_-]?aws[_-]?access[_-]?key[_-]?id["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?browserstack[_-]?access[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?browser[_-]?stack[_-]?access[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?brackets[_-]?repo[_-]?oauth[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?bluemix[_-]?username["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?bluemix[_-]?pwd["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?bluemix[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?bluemix[_-]?pass[_-]?prod["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?bluemix[_-]?pass["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?bluemix[_-]?auth["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?bluemix[_-]?api[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?bintraykey["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?bintray[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?bintray[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?bintray[_-]?gpg[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?bintray[_-]?apikey["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?bintray[_-]?api[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?b2[_-]?bucket["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?b2[_-]?app[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?awssecretkey["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?awscn[_-]?secret[_-]?access[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?awscn[_-]?access[_-]?key[_-]?id["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?awsaccesskeyid["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?aws[_-]?ses[_-]?secret[_-]?access[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?aws[_-]?ses[_-]?access[_-]?key[_-]?id["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?aws[_-]?secrets["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?aws[_-]?secret[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?aws[_-]?secret[_-]?access[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?aws[_-]?secret["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?aws[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?aws[_-]?config[_-]?secretaccesskey["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?aws[_-]?config[_-]?accesskeyid["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?aws[_-]?access[_-]?key[_-]?id["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?aws[_-]?access[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?aws[_-]?access["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?author[_-]?npm[_-]?api[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?author[_-]?email[_-]?addr["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?auth0[_-]?client[_-]?secret["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?auth0[_-]?api[_-]?clientsecret["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?auth[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?assistant[_-]?iam[_-]?apikey["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?artifacts[_-]?secret["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?artifacts[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?artifacts[_-]?bucket["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?artifacts[_-]?aws[_-]?secret[_-]?access[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?artifacts[_-]?aws[_-]?access[_-]?key[_-]?id["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?artifactory[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?argos[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?apple[_-]?id[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?appclientsecret["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?app[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?app[_-]?secrete["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?app[_-]?report[_-]?token[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?app[_-]?bucket[_-]?perm["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?apigw[_-]?access[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?apiary[_-]?api[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?api[_-]?secret["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?api[_-]?key[_-]?sid["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?api[_-]?key[_-]?secret["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?api[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?aos[_-]?sec["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?aos[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?ansible[_-]?vault[_-]?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?android[_-]?docs[_-]?deploy[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?anaconda[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?amazon[_-]?secret[_-]?access[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?amazon[_-]?bucket[_-]?name["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?alicloud[_-]?secret[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?alicloud[_-]?access[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?alias[_-]?pass["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?algolia[_-]?search[_-]?key[_-]?1["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?algolia[_-]?search[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?algolia[_-]?search[_-]?api[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?algolia[_-]?api[_-]?key[_-]?search["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?algolia[_-]?api[_-]?key[_-]?mcm["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?algolia[_-]?api[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?algolia[_-]?admin[_-]?key[_-]?mcm["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?algolia[_-]?admin[_-]?key[_-]?2["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?algolia[_-]?admin[_-]?key[_-]?1["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?air[-_]?table[-_]?api[-_]?key["']?[=:]["']?.+["']) |
        (["']?adzerk[_-]?api[_-]?key["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?admin[_-]?email["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?account[_-]?sid["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?access[_-]?token["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?access[_-]?secret["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?access[_-]?key[_-]?secret["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?account["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?password["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?username["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?[\w_-]*?password[\w_-]*?["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?[\w_-]*?username[\w_-]*?["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?[\w_-]*?accesskey[\w_-]*?["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?[\w_-]*?secret[\w_-]*?["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?[\w_-]*?bucket[\w_-]*?["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?[\w_-]*?token[\w_-]*?["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?[-]+BEGIN \w+ PRIVATE KEY[-]+) |
        (["']?huawei\.oss\.(ak|sk|bucket\.name|endpoint|local\.path)["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?private[_-]?key[_-]?(id)?["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (["']?account[_-]?(name|key)?["']?[^\S\r\n]*[=:][^\S\r\n]*["']?[\w.-]+["']?) |
        (LTAI[A-Za-z\d]{12,30}) |
        (AKID[A-Za-z\d]{13,40}) |
        (JDC_[0-9A-Z]{25,40}) |
        (["']?(?:A3T[A-Z0-9]|AKIA|AGPA|AIDA|AROA|AIPA|ANPA|ANVA|ASIA)[A-Z0-9]{16}["']?) |
        ((?:AKLT|AKTP)[a-zA-Z0-9]{35,50}) |
        (AKLT[a-zA-Z0-9-_]{16,28}) |
        (AIza[0-9A-Za-z_\-]{35}) |
        ([Bb]earer\s+[a-zA-Z0-9\-=._+\\]{20,500}) |
        ([Bb]asic\s+[A-Za-z0-9+]{18,}={0,2}) |
        (["''\[]*[Aa]uthorization["''\]]*\s*[:=]\s*[''"]?\b(?:[Tt]oken\s+)?[a-zA-Z0-9\-_+]{20,500}[''"]?) |
        ((glpat-[a-zA-Z0-9\-=_]{20,22})) |
        (((?:ghp|gho|ghu|ghs|ghr|github_pat)_[a-zA-Z0-9_]{36,255})) |
        (APID[a-zA-Z0-9]{32,42}) |
        (["'](wx[a-z0-9]{15,18})["']) |
        (["'](ww[a-z0-9]{15,18})["']) |
        (["'](gh_[a-z0-9]{11,13})["']) |
        ((?:admin_?pass|password|[a-z]{3,15}_?password|user_?pass|user_?pwd|admin_?pwd)\\?['"]*\s*[:=]\s*\\?['"][a-z0-9!@#$%&*]{5,20}\\?['"]) |
        (https:\\/qyapi\.weixin\.qq\.com\/cgi\-bin\/webhook\/send\?key=[a-zA-Z0-9\-]{25,50}) |
        (https:\\/oapi\.dingtalk\.com\/robot\/send\?access_token=[a-z0-9]{50,80}) |
        (https:\\/open\.feishu\.cn\/open\-apis\/bot\/v2\/hook\/[a-z0-9\-]{25,50}) |
        (https:\\/hooks\.slack\.com\/services\/[a-zA-Z0-9\-_]{6,12}\/[a-zA-Z0-9\-_]{6,12}\/[a-zA-Z0-9\-_]{15,24}) |
        (eyJrIjoi[a-zA-Z0-9\-_+]{50,100}={0,2}) |
        (glc_[A-Za-z0-9\-_+]{32,200}={0,2}) |
        (glsa_[A-Za-z0-9]{32}_[A-Fa-f0-9]{8}) |
        (['"]((\d{8}(0\d|10|11|12)([0-2]\d|30|31)\d{3}$)|(\d{6}(18|19|20)\d{2}(0[1-9]|10|11|12)([0-2]\d|30|31)\d{3}(\d|X|x)))['"]) |
        (['"](1(3([0-35-9]\d|4[1-8])|4[14-9]\d|5([\d]\d|7[1-79])|66\d|7[2-35-8]\d|8\d{2}|9[89]\d)\d{7})['"]) |
        (['"][a-zA-Z0-9\._\-]*@[a-zA-Z0-9\._\-]{1,63}\.((?!js|css|jpg|jpeg|png|ico)[a-zA-Z]{2,})['"]) |
        (['"](ey[A-Za-z0-9_-]{10,}\.[A-Za-z0-9._-]{10,}|ey[A-Za-z0-9_\+-]{10,}\.[A-Za-z0-9._\/+-]{10,})['"]) |
        (([a-z0-9]+[_|\.])*[a-z0-9]+@([a-z0-9]+[-|_|\.])*[a-z0-9]+\.((?!js|css|jpg|jpeg|png|ico)[a-z]{2,5})) |
        ([^0-9]((\d{8}(0\d|10|11|12)([0-2]\d|30|31)\d{3}$)|(\d{6}(18|19|20)\d{2}(0[1-9]|10|11|12)([0-2]\d|30|31)\d{3}(\d|X|x)))[^0-9]) |
        ([^\w]((?:(?:\+|00)86)?1(?:(?:3[\d])|(?:4[5-79])|(?:5[0-35-9])|(?:6[5-7])|(?:7[0-8])|(?:8[\d])|(?:9[189]))\d{8})[^\w]) |
        (((access)(|-|_)(key)(|-|_)(id|secret))|(LTAI[a-z0-9]{12,20})) |
        [^\w](([a-zA-Z]:\\(?:\w+\\?)*)|([a-zA-Z]:\\(?:\w+\\)*\w+\.\w+)) |
        ((|'|")(|[\w]{1,10})([p](ass|wd|asswd|assword))(|[\w]{1,10})(|'|")(:|=)( |)('|")(.*?)('|")(|,)) |
        ((|'|")(|[\w]{1,10})(([u](ser|name|sername))|(account)|((((create|update)((d|r)|(by|on|at)))|(creator))))(|[\w]{1,10})(|'|")(:|=)( |)('|")(.*?)('|")(|,)) |
        (jdbc:[a-z:]+:/[a-z0-9\.\-_:;=/@?,&]+) |
        ((basic [a-z0-9=:_\+\-]{5,100})|(bearer [a-z0-9_.=:_\+\/-]{5,100})) |
        ((\[)?('|")?([\w]{0,10})((key)|(secret)|(token)|(config)|(auth)|(access)|(admin)|(ticket))([\w]{0,10})('|")?(\])?( |)(:|=)( |)('|")(.*?)('|")(|,)) |
        (((access_key|access_token|admin_pass|admin_user|algolia_admin_key|algolia_api_key|alias_pass|alicloud_access_key|amazon_secret_access_key|amazonaws|ansible_vault_password|aos_key|api_key|api_key_secret|api_key_sid|api_secret|api.googlemaps AIza|apidocs|apikey|apiSecret|app_debug|app_id|app_key|app_log_level|app_secret|appkey|appkeysecret|application_key|appsecret|appspot|auth_token|authorizationToken|authsecret|aws_access|aws_access_key_id|aws_bucket|aws_key|aws_secret|aws_secret_key|aws_token|AWSSecretKey|b2_app_key|bashrc password|bintray_apikey|bintray_gpg_password|bintray_key|bintraykey|bluemix_api_key|bluemix_pass|browserstack_access_key|bucket_password|bucketeer_aws_access_key_id|bucketeer_aws_secret_access_key|built_branch_deploy_key|bx_password|cache_driver|cache_s3_secret_key|cattle_access_key|cattle_secret_key|certificate_password|ci_deploy_password|client_secret|client_zpk_secret_key|clojars_password|cloud_api_key|cloud_watch_aws_access_key|cloudant_password|cloudflare_api_key|cloudflare_auth_key|cloudinary_api_secret|cloudinary_name|codecov_token|config|conn.login|connectionstring|consumer_key|consumer_secret|credentials|cypress_record_key|database_password|database_schema_test|datadog_api_key|datadog_app_key|db_password|db_server|db_username|dbpasswd|dbpassword|dbuser|deploy_password|digitalocean_ssh_key_body|digitalocean_ssh_key_ids|docker_hub_password|docker_key|docker_pass|docker_passwd|docker_password|dockerhub_password|dockerhubpassword|dot-files|dotfiles|droplet_travis_password|dynamoaccesskeyid|dynamosecretaccesskey|elastica_host|elastica_port|elasticsearch_password|encryption_key|encryption_password|env.heroku_api_key|env.sonatype_password|eureka.awssecretkey)[a-z0-9_ .\-,]{0,25})(=|>|:=|\|\|:|<=|=>|:).{0,5}['\"\ ]([0-9a-zA-Z\-_=]{8,64})['\"\ ]) |
        (['\"\ ](GOOG[\w\W]{10,30})['\"\ ]|(['\"\ ]AZ[A-Za-z0-9]{34,40}['\"\ ])|(['\"\ ]AKID[A-Za-z0-9]{13,20}['\"\ ])|(['\"\ ]AKIA[A-Za-z0-9]{16}['\"\ ])|(['\"\ ][a-zA-Z0-9]{8}(-[a-zA-Z0-9]{4}){3}-[a-zA-Z0-9]{12}['\"\ ])|(['\"\ ]OCID[A-Za-z0-9]{10,40}['\"\ ])|(['\"\ ]LTAI[A-Za-z0-9]{12,20}['\"\ ])|(['\"\ ][A-Z0-9]{20}$['\"\ ])|(['\"\ ]JDC_[A-Z0-9]{28,32}['\"\ ])|(['\"\ ]AK[A-Za-z0-9]{10,40}['\"\ ])|(['\"\ ]UC[A-Za-z0-9]{10,40}['\"\ ])|(['\"\ ]QY[A-Za-z0-9]{10,40}['\"\ ])|(['\"\ ]AKLT[a-zA-Z0-9-_]{16,28}['\"\ ])|(['\"\ ]LTC[A-Za-z0-9]{10,60}['\"\ ])|(['\"\ ]YD[A-Za-z0-9]{10,60}['\"\ ])|(['\"\ ]CTC[A-Za-z0-9]{10,60}['\"\ ])|(['\"\ ]YYT[A-Za-z0-9]{10,60}['\"\ ])|(['\"\ ]YY[A-Za-z0-9]{10,40}['\"\ ])|(['\"\ ]CI[A-Za-z0-9]{10,40}['\"\ ])|(['\"\ ]gcore[A-Za-z0-9]{10,30}['\"\ ])) |
        (((access_key|appsecret|app_secret|access_token|password|secretkey|accesskey|accesskeyid|accesskeysecret|secret_key|pwd|test_user|admin_pass|admin_user|algolia_admin_key|algolia_api_key|alias_pass|alicloud_access_key|amazon_secret_access_key|amazonaws|ansible_vault_password|aos_key|api_key|api_key_secret|api_key_sid|api_secret|api.googlemaps AIza|apidocs|apikey|apiSecret|app_debug|app_id|app_key|app_log_level|app_secret|appkey|appkeysecret|application_key|appsecret|appspot|auth_token|authorizationToken|authsecret|aws_access|aws_access_key_id|aws_bucket|aws_key|aws_secret|aws_secret_key|aws_token|AWSSecretKey|b2_app_key|bashrc password|bintray_apikey|bintray_gpg_password|bintray_key|bintraykey|bluemix_api_key|bluemix_pass|browserstack_access_key|bucket_password|bucketeer_aws_access_key_id|bucketeer_aws_secret_access_key|built_branch_deploy_key|bx_password|cache_driver|cache_s3_secret_key|cattle_access_key|cattle_secret_key|certificate_password|ci_deploy_password|client_secret|client_zpk_secret_key|clojars_password|cloud_api_key|cloud_watch_aws_access_key|cloudant_password|cloudflare_api_key|cloudflare_auth_key|cloudinary_api_secret|cloudinary_name|codecov_token|config|conn.login|connectionstring|consumer_key|consumer_secret|credentials|cypress_record_key|database_password|database_schema_test|datadog_api_key|datadog_app_key|db_password|db_server|db_username|dbpasswd|dbpassword|dbuser|deploy_password|digitalocean_ssh_key_body|digitalocean_ssh_key_ids|docker_hub_password|docker_key|docker_pass|docker_passwd|docker_password|dockerhub_password|dockerhubpassword|dot-files|dotfiles|droplet_travis_password|dynamoaccesskeyid|dynamosecretaccesskey|elastica_host|elastica_port|elasticsearch_password|encryption_key|encryption_password|env.heroku_api_key|env.sonatype_password|eureka.awssecretkey)[a-z0-9_.]{0,25})(=|>|:=|:|<=|=>|:).{0,5}['\"\ ]([0-9a-zA-Z-_=]{12,64})['\"\ ])
    )
    """, re.IGNORECASE | re.VERBOSE)

# 常见第三方JS库列表（用于排除，避免扫描第三方资源）
THIRD_PARTY_JS_LIBRARIES = {
    # jQuery相关
    'jquery', 'jquery.min', 'jquery-ui', 'jquery-migrate',
    
    # 前端框架
    'react', 'react.min', 'angular', 'angular.min',
    'bootstrap', 'bootstrap.min', 'foundation', 'semantic',
    
    # 工具库
    'lodash', 'lodash.min', 'underscore', 'moment', 'moment.min',
    'axios', 'axios.min', 'polyfill',
    
    # 图表库
    'chart', 'chart.min', 'echarts', 'highcharts',
    
    # UI组件库
    'antd', 'element', 'iview', 'layui', 'amazeui',
    
    # 其他常见库
    #'swiper', 'swiper.min', 'slick', 'owl.carousel', 'lightbox',
    #'tinymce', 'ckeditor', 'summernote', 'quill',
    #'socket.io', 'socket.io.min', 'sockjs',
    #'analytics', 'google-analytics',
    #'facebook', 'twitter', 'linkedin', 'pinterest',
    #'recaptcha', 'captcha', 'hcaptcha',
    #'stripe', 'paypal', 'braintree',
    #'mapbox', 'leaflet', 'google-maps',
    #'bundle', 'vendor'
    
    # CDN常见路径
    #'cdn', 'static', 'assets', 'lib', 'libs', 'js', 'scripts',
    #'unpkg', 'jsdelivr', 'cdnjs', 'googleapis', 'microsoft',
    
    # 版本号模式
    #'v1', 'v2', 'v3', 'v4', 'v5', 'latest', 'stable'
}

def is_third_party_js(url):
    """
    检查URL是否为第三方JS库
    返回True表示是第三方库，应该排除
    """
    try:
        # 解析URL获取路径部分
        parsed_url = urlparse(url)
        path = parsed_url.path.lower()
        
        # 检查是否包含第三方库关键词
        for library in THIRD_PARTY_JS_LIBRARIES:
            if library in path:
                return True
        
        # 检查是否为CDN域名
        cdn_domains = [
            'cdnjs.cloudflare.com', 'unpkg.com', 'jsdelivr.net',
            'ajax.googleapis.com', 'ajax.aspnetcdn.com',
            'cdn.jsdelivr.net', 'stackpath.bootstrapcdn.com',
            'maxcdn.bootstrapcdn.com', 'cdnjs.cloudflare.com',
            'code.jquery.com', 'cdn.sstatic.net', 'www.w3.org'
        ]
        
        hostname = parsed_url.hostname.lower() if parsed_url.hostname else ''
        for cdn_domain in cdn_domains:
            if cdn_domain in hostname:
                return True
        
        # 检查路径模式
        third_party_patterns = [
            r'/node_modules/',
            r'/bower_components/', r'/third-party/'
        ]
        
        for pattern in third_party_patterns:
            if re.search(pattern, path):
                return True
                
        return False
    except Exception:
        return False

def get_reponse(url, cookies=None):
    try:
        # 随机延迟，模拟人类行为
        #time.sleep(random.uniform(0.5, 2.0))
        
        # 多个User-Agent轮换使用
        user_agents = [
            'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36',
            'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36',
            'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36',
            'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/121.0',
            'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/17.1 Safari/605.1.15'
        ]
        
        # 模拟真实浏览器的请求头
        headers = {
            'User-Agent': random.choice(user_agents),
            'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
            'Accept-Language': 'zh-CN,zh;q=0.9,en;q=0.8',
            'Accept-Encoding': 'gzip, deflate, br',
            'DNT': '1',
            'Connection': 'keep-alive',
            'Upgrade-Insecure-Requests': '1',
            'Sec-Fetch-Dest': 'document',
            'Sec-Fetch-Mode': 'navigate',
            'Sec-Fetch-Site': 'none',
            'Sec-Fetch-User': '?1',
            'Cache-Control': 'max-age=0',
            'Referer': 'https://www.google.com/'  # 模拟从搜索引擎访问
        }
        
        # 创建会话以保持连接
        session = requests.Session()
        session.headers.update(headers)
        
        # 设置Cookie（如果提供）
        if cookies:
            if isinstance(cookies, str):
                # 如果是字符串格式的Cookie，解析并设置
                cookie_dict = {}
                for cookie in cookies.split(';'):
                    if '=' in cookie:
                        key, value = cookie.strip().split('=', 1)
                        cookie_dict[key] = value
                session.cookies.update(cookie_dict)
            elif isinstance(cookies, dict):
                # 如果是字典格式的Cookie，直接更新
                session.cookies.update(cookies)
        
        # 设置连接池配置，模拟真实浏览器行为
        adapter = requests.adapters.HTTPAdapter(
            pool_connections=10,
            pool_maxsize=20,
            max_retries=3
        )
        session.mount('http://', adapter)
        session.mount('https://', adapter)
        
        # 忽略TLS证书验证，但保持其他正常请求行为
        resp = session.get(url, timeout=15, verify=False, allow_redirects=True)
        resp.raise_for_status()
        return resp.text
    except Exception as e:
        print(f"获取页面失败: {url} 错误: {e}")
        return None

def extract_paths(content, base_url, content_type="html"):
    """
    从HTML或JS内容中提取各种类型的路径
    content: 要分析的内容
    base_url: 基础URL，用于拼接相对路径
    content_type: 内容类型，"html" 或 "js"
    """
    found_paths = {
        'complete_path': set(),  # 完整URL路径
        'incomplete_path': set(),  # 不完整URL路径
        'other': set()  # 其他情况
    }
    
    # 如果是HTML内容，还要从标签中提取
    if content_type == "html":
        soup = BeautifulSoup(content, "html.parser")
        
        # 从script标签提取
        for script in soup.find_all("script", src=True):
            src = script['src']
            if src:
                category = categorize_path(src)
                found_paths[category].add(src)
        
        # 从link标签提取
        for link in soup.find_all("link", href=True):
            href = link['href']
            if href:
                category = categorize_path(href)
                found_paths[category].add(href)
        
        # 从a标签提取
        for a in soup.find_all("a", href=True):
            href = a['href']
            if href:
                category = categorize_path(href)
                found_paths[category].add(href)
        
        # 从form标签提取action
        for form in soup.find_all("form", action=True):
            action = form['action']
            if action:
                category = categorize_path(action)
                found_paths[category].add(action)
        
        # 从iframe标签提取src
        for iframe in soup.find_all("iframe", src=True):
            src = iframe['src']
            if src:
                category = categorize_path(src)
                found_paths[category].add(src)
    
    # 使用正则表达式提取路径
    matches = path_pattern.findall(content)
    for match in matches:
        if isinstance(match, tuple):
            # 如果返回的是元组，取第一个非空元素
            match = next((m for m in match if m), "")
        if match:
            # 分类路径
            category = categorize_path(match)
            found_paths[category].add(match)
    
    # 处理路径，转换为完整URL并过滤第三方库
    processed_paths = {
        'complete_path': set(),
        'incomplete_path': set(),
        'other': set()
    }
    
    for category, paths in found_paths.items():
        for path in paths:
            if not path:
                continue
                
            # 清理路径
            path = path.strip()
            
            # 跳过明显不是路径的内容
            # if len(path) < 2 or path.startswith('#') or path.startswith('javascript:') or path.startswith('mailto:'):
            #     continue
            
            # 如果是完整URL，直接添加
            if path.startswith('//') and '://' in path:
                full_url = path[2:]
            elif '://' in path:
                full_url = path
            elif path.startswith('//'):
                full_url = urlparse(base_url).scheme + '://' + path[2:]
            else:
                # 相对路径，需要拼接base_url
                try:
                    full_url = urljoin(base_url, path)
                except Exception:
                    continue
            
            # 检查是否为第三方JS库，如果是则跳过
            if is_third_party_js(full_url):
                print(f"[!] 跳过第三方库: {full_url}")
                continue
                
            processed_paths[category].add(full_url)
    
    return processed_paths


def extract_domain(url):
    """
    从URL中提取域名
    """
    try:
        parsed = urlparse(url)
        return parsed.netloc.lower()
    except Exception:
        return ""

def categorize_path(path):
    """
    将路径分类到对应的类别中
    """
    if path.startswith(('http://', 'https://', '//')):
        return 'complete_path'
    elif path.startswith(('/', './', '../')) or '.' in path:
        return 'incomplete_path'
    else:
        return 'other'

def extract_sensitive_fields(content):
    """
    通过正则表达式提取敏感字段
    """

    found = set()
    
    # 使用正则表达式匹配敏感字段
    matches = sensitive_pattern.findall(content)
    
    for match in matches:
        if isinstance(match, tuple):
            # 如果返回的是元组，取第一个非空元素
            sensitive_value = next((m for m in match if m), "")
        else:
            sensitive_value = match
            
        if sensitive_value and len(sensitive_value.strip()) > 0:
            found.add(sensitive_value.strip())
    
    return found

def init_result_files():
    """
    初始化结果文件，清空内容并写入文件头
    """
    # 初始化敏感字段文件
    with open('sensitive_fields.txt', 'w', encoding='utf-8') as f:
        f.write("# 敏感字段扫描结果\n")
        f.write("# 格式: 第一行为URL，后续行为该URL发现的敏感字段\n\n")

def append_sensitive_fields_to_file(url, sensitive_fields):
    """
    将敏感字段追加到txt文件中
    """
    if sensitive_fields:
        with open('sensitive_fields.txt', 'a', encoding='utf-8') as f:
            f.write(f"URL: {url}\n")
            for field in sensitive_fields:
                f.write(f"  - {field}\n")
            f.write("\n")

def clean_incomplete_path(path):
    """
    清理不完整路径，剔除协议和域名，只保留路径部分
    """
    try:
        # 如果包含协议，提取路径部分
        if '://' in path:
            parsed = urlparse(path)
            return parsed.path + (parsed.query and '?' + parsed.query or '') + (parsed.fragment and '#' + parsed.fragment or '')
        # 如果以//开头，去掉//
        elif path.startswith('//'):
            return path[2:]
        # 其他情况直接返回
        else:
            return path
    except Exception:
        return path

def prepare_path_data(url, paths):
    """
    准备路径数据用于JSON输出
    """
    path_data = {
        "source_url": url,
        "complete_path": [],
        "incomplete_path": [],
        "other": [],
        "domain": []
    }
    
    # 处理完整路径
    path_data["complete_path"] = list(paths.get('complete_path', []))
    
    # 处理不完整路径，清理协议和域名
    cleaned_incomplete_paths = []
    for path in paths.get('incomplete_path', []):
        cleaned_path = clean_incomplete_path(path)
        cleaned_incomplete_paths.append(cleaned_path)
    path_data["incomplete_path"] = cleaned_incomplete_paths
    
    # 处理其他路径
    path_data["other"] = list(paths.get('other', []))
    
    # 从所有路径中提取域名
    all_paths = []
    for category_paths in paths.values():
        all_paths.extend(category_paths)
    
    domains = set()
    for path in all_paths:
        domain = extract_domain(path)
        if domain:  # 只添加非空域名
            domains.add(domain)
    
    path_data["domain"] = list(domains)
    
    return path_data

def save_paths_to_json(all_paths_data):
    """
    使用json.dump将所有路径数据保存到JSON文件
    """
    # 汇总所有路径数据
    full_complete_paths = set()
    full_incomplete_paths = set()
    full_other_paths = set()
    full_domains = set()
    
    for path_data in all_paths_data:
        full_complete_paths.update(path_data.get('complete_path', []))
        full_incomplete_paths.update(path_data.get('incomplete_path', []))
        full_other_paths.update(path_data.get('other', []))
        full_domains.update(path_data.get('domain', []))
    
    # 构建最终的JSON结构
    final_data = {
        "summary": {
            "total_sources": len(all_paths_data),
            "full_complete_paths": list(full_complete_paths),
            "full_incomplete_paths": list(full_incomplete_paths),
            "full_other_paths": list(full_other_paths),
            "full_domains": list(full_domains)
        },
        "detailed_results": all_paths_data
    }
    
    with open('discovered_paths.json', 'w', encoding='utf-8') as f:
        json.dump(final_data, f, ensure_ascii=False, indent=2)


def is_same_domain(url1, url2):
    """
    检查两个URL是否属于同一个域名
    """
    try:
        domain1 = urlparse(url1).netloc.lower()
        domain2 = urlparse(url2).netloc.lower()
        return domain1 == domain2
    except Exception:
        return False

def should_add_to_queue(url, base_url):
    """
    判断URL是否应该加入遍历队列
    条件：1. 是.js文件 2. 与初始URL同域
    """
    parsed_url = urlparse(url)
    ext = os.path.splitext(parsed_url.path)[1]
    try:
        # 检查是否为.js文件
        if ext in ['.js']:
            return True
        
        # 检查是否与初始URL同域
        if is_same_domain(url, base_url) and ext not in ['.jpg','.jpeg','.svg','.png','.gif','.mp3','.mp4','.flv','.css','.woff','.woff2','.ico','.pdf','.doc','.docx','.ppt','.pptx','.zip','.exe']:
            return True
            
        return False
    except Exception:
        return False

def get_all_paths_from_categorized(paths_dict):
    """
    从分类的路径字典中获取所有路径
    """
    all_paths = set()
    for category_paths in paths_dict.values():
        all_paths.update(category_paths)
    return all_paths

def crawl(url, cookies=None):
    visited_paths = set()
    discovered_paths = {
        'complete_path': set(),
        'incomplete_path': set(),
        'other': set()
    }
    discovered_sensitive = set()
    all_paths_data = []  # 存储所有路径数据用于JSON输出
    base_domain = urlparse(url).netloc.lower()  # 保存初始域名
    
    # 初始化结果文件
    init_result_files()
    print(f"[*] 已初始化结果文件")
    print(f"[*] 初始域名: {base_domain}")

    print(f"[*] 正在分析页面: {url}")
    html = get_reponse(url, cookies)
    if not html:
        return

    # 1. 获取敏感字段
    sensitive_fields = extract_sensitive_fields(html)
    if sensitive_fields:
        # print(f"[+] 发现敏感字段: {sensitive_fields}")
        discovered_sensitive.update(sensitive_fields)
        # 立即写入敏感字段到文件
        append_sensitive_fields_to_file(url, sensitive_fields)

    # 2. 获取所有路径
    all_paths = extract_paths(html, url, "html")
    # print(f"[+] 发现路径: {all_paths}")
    for category, paths in all_paths.items():
        discovered_paths[category].update(paths)
    if any(all_paths.values()):
        # 准备路径数据用于JSON输出
        path_data = prepare_path_data(url, all_paths)
        all_paths_data.append(path_data)

    # 3. 筛选需要遍历的路径：只包含.js文件和同域路径
    queue_paths = []
    all_paths_flat = get_all_paths_from_categorized(all_paths)
    for path in all_paths_flat:
        if should_add_to_queue(path, url):
            queue_paths.append(path)
            print(f"[+] 加入遍历队列: {path}")
        else:
            print(f"[!] 跳过非目标路径: {path}")
    
    queue = list(queue_paths)
    while queue:
        current_url = queue.pop()
        if current_url in visited_paths:
            continue
        print(f"[*] 正在分析: {current_url}")
        content = get_reponse(current_url, cookies)
        if not content:
            continue
        visited_paths.add(current_url)

        # 根据文件类型确定内容类型
        content_type = "js" if current_url.endswith('.js') else "html"
        
        # 从内容中提取新的路径
        new_paths = extract_paths(content, current_url, content_type)
        if any(new_paths.values()):
            # 准备路径数据用于JSON输出
            path_data = prepare_path_data(current_url, new_paths)
            all_paths_data.append(path_data)
        
        new_paths_flat = get_all_paths_from_categorized(new_paths)
        for np in new_paths_flat:
            # 检查是否是新路径
            all_discovered_flat = get_all_paths_from_categorized(discovered_paths)
            if np not in all_discovered_flat:
                # 将路径添加到对应的分类中
                for category, paths in new_paths.items():
                    if np in paths:
                        discovered_paths[category].add(np)
                        break
                
                # 只将符合条件的路径加入队列
                if should_add_to_queue(np, url):  # 使用初始URL作为基准
                    print(f"[+] 发现新目标路径，加入队列: {np}")
                    queue.append(np)
                else:
                    print(f"[!] 发现新路径但跳过: {np}")

        # 检查敏感字段
        new_sensitive = extract_sensitive_fields(content)
        if new_sensitive:
            # 立即写入敏感字段到文件
            append_sensitive_fields_to_file(current_url, new_sensitive)
        for ns in new_sensitive:
            if ns not in discovered_sensitive:
                # print(f"[+] 发现新的敏感字段: {ns}")
                discovered_sensitive.add(ns)

    # 保存路径数据到JSON文件
    save_paths_to_json(all_paths_data)
    
    print("\n[*] 扫描完成!")
    print(f"总共发现敏感字段: {len(discovered_sensitive)} 个")
    total_paths = sum(len(paths) for paths in discovered_paths.values())
    print(f"总共发现路径: {total_paths} 个")
    print(f"  - 完整路径: {len(discovered_paths['complete_path'])} 个")
    print(f"  - 不完整路径: {len(discovered_paths['incomplete_path'])} 个")
    print(f"  - 其他路径: {len(discovered_paths['other'])} 个")
    print(f"\n[*] 结果已保存到文件:")
    print(f"敏感字段: sensitive_fields.txt")
    print(f"路径信息: discovered_paths.json")

if __name__ == "__main__":
    target_url = input("请输入目标URL: ").strip()
    
    # 可选的Cookie配置
    cookie_input = input("请输入Cookie（可选，直接回车跳过）: ").strip()
    cookies = cookie_input if cookie_input else None
    
    crawl(target_url, cookies)
